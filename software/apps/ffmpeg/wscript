#!/usr/bin/env python

def build(bld):
    for arch in bld.lst_variants:
        if not arch.startswith('arm'): continue

        bld.env_of_name(arch)['FFMPEG_SUBDIRS_INCLUDES'] = """
            . ../ ../libavcodec ../libavdevice ../libavfilter ../libavformat ../libavutil
            ../libswscale 
            """
        bld.env_of_name(arch)['FFMPEG_SUBDIRS_ADDITIONALFLAGS'] = [ '-D_FILE_OFFSET_BITS=64',
            '-DHAVE_AV_CONFIG_H', '-D_LARGEFILE_SOURCE', '-D_ISOC9X_SOURCE', '-fomit-frame-pointer',
            '-mcpu=arm7tdmi', '-Wdeclaration-after-statement', '-Wall', '-Wno-switch', '-Wdisabled-optimization',
            '-Wpointer-arith', '-Wredundant-decls', '-Wno-pointer-sign', '-Wcast-qual', '-Wwrite-strings', '-fno-math-errno']
        bld.add_subdirs('libavutil libavdevice libavformat libavfilter libavcodec llrint')
        libs = 'avutil_arm' # 'posixLayer_'+arch + ' interrupt_' + arch + ' avutil_' + arch
        obj = bld.new_task_gen('cc','program')
        obj.env = bld.env_of_name(arch).copy()
        obj.add_objects = 'avcodec_' + arch + ' lrint_' + arch + ' avformat_' + arch + ' avdevice_' + arch
        obj.find_sources_in_dirs('.')
        #obj.source = """
        #ffmpeg.c cmdutils.c
        #"""
        obj.target = 'ffmpeg'
        obj.includes     = """. ./libavcodec ./libavdevice ./libavfilter ./libavformat ./libavutil
            ./libswscale"""
        obj.uselib_local = libs
        obj.env.append_unique('CPPFLAGS', bld.env_of_name(arch)['FFMPEG_SUBDIRS_ADDITIONALFLAGS'])
        linkFlags = [ '-Wl,--warn-common', '-Wl,-Bsymbolic']
        obj.env.append_unique('LINKFLAGS', linkFlags)

