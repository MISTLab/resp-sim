# -*- coding: iso-8859-1 -*-
##############################################################################
#
#
#         ___           ___           ___           ___
#        /  /\         /  /\         /  /\         /  /\
#       /  /::\       /  /:/_       /  /:/_       /  /::\
#      /  /:/\:\     /  /:/ /\     /  /:/ /\     /  /:/\:\
#     /  /:/~/:/    /  /:/ /:/_   /  /:/ /::\   /  /:/~/:/
#    /__/:/ /:/___ /__/:/ /:/ /\ /__/:/ /:/\:\ /__/:/ /:/
#    \  \:\/:::::/ \  \:\/:/ /:/ \  \:\/:/~/:/ \  \:\/:/
#     \  \::/~~~~   \  \::/ /:/   \  \::/ /:/   \  \::/
#      \  \:\        \  \:\/:/     \__\/ /:/     \  \:\
#       \  \:\        \  \::/        /__/:/       \  \:\
#        \__\/         \__\/         \__\/         \__\/
#
#
#
#
#   This file is part of ReSP.
#
#   TRAP is free software; you can redistribute it and/or modify
#   it under the terms of the GNU Lesser General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU Lesser General Public License for more details.
#
#   You should have received a copy of the GNU Lesser General Public License
#   along with this program; if not, write to the
#   Free Software Foundation, Inc.,
#   51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
#   or see <http://www.gnu.org/licenses/>.
#
#
#
#   (c) Giovanni Beltrame, Luca Fossati
#       Giovanni.Beltrame@esa.int fossati@elet.polimi.it
#
##############################################################################

import Options

def build(bld):
    # Generation of the controller library
    obj = bld.new_task_gen('cxx', 'cshlib')
    obj.source ='''
        simulation_engine.cpp controller.cpp
    '''

    obj.target = 'sc_controller'
    obj.uselib = 'SYSTEMC_H BOOST BOOST_THREAD PYEXT'
    obj.uselib_local = 'systemc'

    # Generation of the controller wrapper extension
    obj = bld.new_task_gen('pypp')
    obj.source ='''
        controller.hpp
    '''

    obj.target = 'sc_controller_wrapper'
    obj.uselib = 'SYSTEMC_H BOOST PYEXT BOOST_PYTHON BOOST_THREAD'
    obj.uselib_local = 'systemc sc_controller'
    obj.include = 'scwrapper'
    obj.start_decls = 'resp'
    obj.custom_code = """
# Exclude protected members
mb.calldefs( declarations.access_type_matcher_t( 'protected' ) ).exclude()

# Exclude simulation_engine
simulation_engine = mb.class_('simulation_engine')
simulation_engine.exclude()

callback = mb.class_('EOScallback')
callback.include()
mb.global_ns.free_functions('register_EOS_callback').include()

controller = mb.class_('sc_controller')
controller.include()
controller.variable('stopped_condition').exclude()
controller.variable('global_mutex').exclude()
controller.variable('se').exclude()
controller.variable('stop').exclude()
controller.variable('ended').exclude()
controller.variable('accumulatedTime').exclude()
controller.member_function('createController').call_policies = call_policies.return_value_policy(call_policies.reference_existing_object)
virtuality = True

mb.class_('caller').exclude()
mb.variable('controllerInstance').exclude()
"""
