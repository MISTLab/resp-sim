#!/usr/bin/env python

import sys,os

def build(bld):

    for arch in bld.lst_variants:
        if arch == 'default': continue

        obj = bld.new_task_gen(features='cc cprogram')
        obj.env = bld.env_of_name(arch).copy()
        obj.source = """
            c_loopA.solution1.c
        """
        obj.target = 'c_loopASol1'
        obj.includes = '../../include'
        obj.uselib_local = 'ompsrc_cc_'+arch+'  gomp_'+arch+' pthread_stub_'+arch 
        obj.env.append_unique('CFLAGS', '-fopenmp')
        obj.env.append_unique('CCFLAGS', '-fopenmp')
        obj.env.append_unique('LINKFLAGS', '-lm')

        obj = bld.new_task_gen(features='cc cprogram')
        obj.env = bld.env_of_name(arch).copy()
        obj.source = """
            c_loopA.solution2.c
        """
        obj.target = 'c_loopASol2'
        obj.includes = '../../include'
        obj.uselib_local = 'ompsrc_cc_'+arch+'  gomp_'+arch+' pthread_stub_'+arch 
        obj.env.append_unique('CFLAGS', '-fopenmp')
        obj.env.append_unique('CCFLAGS', '-fopenmp')
        obj.env.append_unique('LINKFLAGS', '-lm')

        obj = bld.new_task_gen(features='cc cprogram')
        obj.env = bld.env_of_name(arch).copy()
        obj.source = """
            c_loopA.solution3.c
        """
        obj.target = 'c_loopASol3'
        obj.includes = '../../include'
        obj.uselib_local = 'ompsrc_cc_'+arch+'  gomp_'+arch+' pthread_stub_'+arch 
        obj.env.append_unique('CFLAGS', '-fopenmp')
        obj.env.append_unique('CCFLAGS', '-fopenmp')
        obj.env.append_unique('LINKFLAGS', '-lm')

        obj = bld.new_task_gen(features='cc cprogram')
        obj.env = bld.env_of_name(arch).copy()
        obj.source = """
            c_loopB.pipelineSolution.c
        """
        obj.target = 'c_loopBPipe'
        obj.includes = '../../include'
        obj.uselib_local = 'ompsrc_cc_'+arch+'  gomp_'+arch+' pthread_stub_'+arch 
        obj.env.append_unique('CFLAGS', '-fopenmp')
        obj.env.append_unique('CCFLAGS', '-fopenmp')
        obj.env.append_unique('LINKFLAGS', '-lm')
