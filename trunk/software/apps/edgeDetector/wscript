#!/usr/bin/env python

def build(bld):

    for arch in bld.lst_variants:
        if arch == 'default': continue

        obj = bld.new_task_gen(features='cc cprogram')
        obj.env = bld.env_of_name(arch).copy()
        obj.source = """
            edgeDetector.c ReadWriteBitmaps.c 
        """
        obj.target = 'edgeDetector'
        obj.env.append_unique('LINKFLAGS', '-lm')

        obj = bld.new_task_gen(features='cc cprogram')
        obj.env = bld.env_of_name(arch).copy()
        obj.source = """
            edgeDetectorNocExample.c ReadWriteBitmaps.c 
        """
        obj.target = 'edgeDetectorNocExample'
        obj.env.append_unique('LINKFLAGS', '-lm')

        obj = bld.new_task_gen(features='cc cprogram')
        obj.env = bld.env_of_name(arch).copy()
        obj.source = """
            edgeDetectorParallel.c ReadWriteBitmaps.c 
        """
        obj.target = 'edgeDetectorParallel'
        obj.includes = '../../suites/OmpSCR_v2.0/include'
        obj.uselib_local = 'ompsrc_cc_'+arch+' gomp_'+arch+' pthread_stub_'+arch 
        obj.env.append_unique('CFLAGS', '-fopenmp')
        obj.env.append_unique('CCFLAGS', '-fopenmp')
        obj.env.append_unique('LINKFLAGS', '-lm')
