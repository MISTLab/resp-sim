#! /usr/bin/env python

def build(bld):
    if not bld.env['STATIC_PLATFORM']:
        obj = bld.new_task_gen('pypp', 'shlib')
        if bld.env['ENABLE_PROCESSORS'] == []:
            obj.source = """
                ProcessorIf.hpp
                leon2If.cpp
                leon2If.hpp
                arm7If.cpp
                arm7If.hpp
                arm7caIf.cpp
                arm7caIf.hpp
            """
        else:
            obj.source = """
                ProcessorIf.hpp
            """
            if 'arm7' in bld.env['ENABLE_PROCESSORS']:
                    obj.source += """
                        arm7If.cpp
                        arm7If.hpp
                    """
            if 'leon2' in bld.env['ENABLE_PROCESSORS']:
                    obj.source += """
                        leon2If.cpp
                        leon2If.hpp
                    """
            if 'arm7ca' in bld.env['ENABLE_PROCESSORS']:
                    obj.source += """
                        arm7caIf.cpp
                        arm7caIf.hpp
                    """
    else:
        obj = bld.new_task_gen('cxx', 'staticlib')
        if bld.env['ENABLE_PROCESSORS'] == []:
            obj.source = """
                leon2If.cpp
                arm7If.cpp
                arm7caIf.cpp
            """
        else:
            obj.source = """
            """
            if 'arm7' in bld.env['ENABLE_PROCESSORS']:
                    obj.source += """
                        arm7If.cpp
                    """
            if 'leon2' in bld.env['ENABLE_PROCESSORS']:
                    obj.source += """
                        leon2If.cpp
                    """
            if 'arm7ca' in bld.env['ENABLE_PROCESSORS']:
                    obj.source += """
                        arm7caIf.cpp
                    """

    obj.target = 'ProcIf'
    obj.uselib = 'SYSTEMC_H TLM_H BOOST'
    if '-DENABLE_FPU' in bld.env['CXXFLAGS']:
        obj.uselib += ' MPFRCPP MPFR GMPXX GMP'
    obj.includes = '../../../lib/archc/ac_includes ../../../component/processor/leon2/functional ../../../component/processor/arm7tdmi/functional ../../../component/processor/arm7tdmi/cycleAcc ../../mysql'
    if bld.env['STATIC_PLATFORM']:
        obj.uselib_local='archc'
        obj.uselib += ' SYSTEMC'
    else:
        obj.uselib_local='systemc archc'
        obj.uselib += ' PYEXT BOOST_PYTHON'
        obj.start_decls = 'resp'
        obj.generate_include = True
        obj.include = 'scwrapper archcwrap'
        obj.custom_code = """
try:
    procIf = mb.global_ns.class_('ProcessorIf')
    procIf.ignore = False
    procIf.member_functions().exclude()
except:
    pass
try:
    mb.global_ns.class_('arm7').already_exposed = True
    stub = mb.global_ns.class_('arm7If')
    stub.include()
    stub.member_functions().exclude()
except:
    pass
try:
    mb.global_ns.class_('arm7ca').already_exposed = True
    stub = mb.global_ns.class_('arm7caIf')
    stub.include()
    stub.member_functions().exclude()
except:
    pass
try:
    mb.global_ns.class_('leon2').already_exposed = True
    stub = mb.global_ns.class_('leon2If')
    stub.include()
    stub.member_functions().exclude()
except:
    pass
"""
