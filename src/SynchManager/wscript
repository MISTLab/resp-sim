#! /usr/bin/env python
# -*- coding: iso-8859-1 -*-

def build(bld):
    bld.add_subdirs('ProcStubs')

    if bld.env['STATIC_PLATFORM']:
        obj = bld.new_task_gen('cxx', 'staticlib')
    else:
        obj = bld.new_task_gen('pypp', 'shlib')
    if bld.env['STATIC_PLATFORM']:
        obj.source = """
            synchManager.cpp
            syscalls.cpp
            threadStruct.cpp
        """
    else:
        obj.source = """
            synchManager.hpp
            synchManager.cpp
            syscalls.cpp
            syscalls.hpp
            threadStruct.hpp
            threadStruct.cpp
        """
    obj.includes = '../../lib/archc/ac_includes ../mysql ../bfdFrontend ./ProcStubs'
    obj.target = 'SynchManager'
    obj.uselib='SYSTEMC_H TLM_H BOOST BFD_CUSTOM'
    if bld.env['STATIC_PLATFORM']:
        obj.uselib += ' SYSTEMC BOOST_REGEX_STATIC'
    else:
        obj.uselib_local = 'systemc'
        obj.uselib += ' BOOST_REGEX PYEXT BOOST_PYTHON'
        obj.include = 'scwrapper ProcIf'
        obj.start_decls = 'resp'
        obj.custom_code = """
cls = mb.global_ns.classes(lambda decl : decl.name.endswith('SysCall') )
for i in cls:
    i.exclude()
"""
