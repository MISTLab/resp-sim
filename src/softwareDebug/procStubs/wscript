#! /usr/bin/env python

def build(bld):
    if not bld.env['STATIC_PLATFORM']:
        obj = bld.new_task_gen('pypp', 'shlib')
        if bld.env['ENABLE_PROCESSORS'] == []:
            obj.source = """
                processorInterface.hpp
                leon2.cpp
                leon2.hpp
                arm7tdmi.cpp
                arm7tdmi.hpp
                arm7tdmica.cpp
                arm7tdmica.hpp
            """
        else:
            obj.source = """
                processorInterface.hpp
            """
            if 'arm7' in bld.env['ENABLE_PROCESSORS']:
                    obj.source += """
                        arm7tdmi.cpp
                        arm7tdmi.hpp
                    """
            if 'leon2' in bld.env['ENABLE_PROCESSORS']:
                    obj.source += """
                        leon2.cpp
                        leon2.hpp
                    """
            if 'arm7ca' in bld.env['ENABLE_PROCESSORS']:
                    obj.source += """
                        arm7tdmica.cpp
                        arm7tdmica.hpp
                    """
    else:
        obj = bld.new_task_gen('cxx', 'staticlib')
        if bld.env['ENABLE_PROCESSORS'] == []:
            obj.source = """
                leon2.cpp
                arm7tdmi.cpp
                arm7tdmica.cpp
            """
        else:
            obj.source = """
            """
            if 'arm7' in bld.env['ENABLE_PROCESSORS']:
                    obj.source += """
                        arm7tdmi.cpp
                    """
            if 'leon2' in bld.env['ENABLE_PROCESSORS']:
                    obj.source += """
                        leon2.cpp
                    """
            if 'arm7ca' in bld.env['ENABLE_PROCESSORS']:
                    obj.source += """
                        arm7tdmica.cpp
                    """

    obj.target = 'GDBProcStub32'
    obj.uselib = 'SYSTEMC_H TLM_H MYSQLPP_H MYSQLCLIENT_H BOOST'
    if '-DENABLE_FPU' in bld.env['CXXFLAGS']:
        obj.uselib += ' MPFRCPP MPFR GMPXX GMP'
    obj.includes = '../../../lib/archc/ac_includes ../../../component/processor/leon2/functional ../../../component/processor/arm7tdmi/functional ../../../component/processor/arm7tdmi/cycleAcc ../../../src/mysql ../../../src/systempy ../'
    if bld.env['STATIC_PLATFORM']:
        obj.uselib_local='archc'
        obj.uselib += ' SYSTEMC'
    else:
        obj.uselib_local='systemc archc'
        obj.uselib += ' PYEXT BOOST_PYTHON'
        obj.start_decls = 'resp'
        obj.custom_code = """
try:
    procIf = mb.global_ns.classes(lambda decl : decl.name.startswith('processorInterface'))
    for i in procIf:
        i.already_exposed = True
except:
    pass
try:
    mb.global_ns.class_('arm7').already_exposed = True
    stub = mb.global_ns.class_('arm7Stub')
    stub.include()
    stub.member_functions().exclude()
except:
    pass
try:
    mb.global_ns.class_('arm7ca').already_exposed = True
    stub = mb.global_ns.class_('arm7caStub')
    stub.include()
    stub.member_functions().exclude()
except:
    pass
try:
    mb.global_ns.class_('leon2').already_exposed = True
    stub = mb.global_ns.class_('leon2Stub')
    stub.include()
    stub.member_functions().exclude()
except:
    pass
"""
