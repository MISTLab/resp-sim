#! /usr/bin/env python
# -*- coding: iso-8859-1 -*-
##############################################################################
#
#
#         ___           ___           ___           ___
#        /  /\         /  /\         /  /\         /  /\
#       /  /::\       /  /:/_       /  /:/_       /  /::\
#      /  /:/\:\     /  /:/ /\     /  /:/ /\     /  /:/\:\
#     /  /:/~/:/    /  /:/ /:/_   /  /:/ /::\   /  /:/~/:/
#    /__/:/ /:/___ /__/:/ /:/ /\ /__/:/ /:/\:\ /__/:/ /:/
#    \  \:\/:::::/ \  \:\/:/ /:/ \  \:\/:/~/:/ \  \:\/:/
#     \  \::/~~~~   \  \::/ /:/   \  \::/ /:/   \  \::/
#      \  \:\        \  \:\/:/     \__\/ /:/     \  \:\
#       \  \:\        \  \::/        /__/:/       \  \:\
#        \__\/         \__\/         \__\/         \__\/
#
#
#
#
#   This file is part of ReSP.
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#
#
#   (c) Giovanni Beltrame, Luca Fossati
#       Giovanni.Beltrame@esa.int fossati@elet.polimi.it
#
##############################################################################


import os, sys

def build(bld):
    obj = bld.new_task_gen('cxx', 'cshlib')
    obj.source = """
        bfdWrapper.cpp
    """
    obj.target = 'BFDWrapper'
    obj.export_incdirs = '.'
    obj.uselib_local = 'binutils utils'
    obj.uselib = 'BOOST BOOST_REGEX BFD_H'

    obj = bld.new_task_gen('pypp')
    obj.source = """
        bfdWrapper.hpp
    """
    obj.target = 'bfdwrapper'
    obj.uselib = 'BOOST BOOST_REGEX BOOST_PYTHON BFD_H'
    obj.uselib_local = 'BFDWrapper'
    obj.start_decls = 'BFDWrapper'
    obj.custom_declaration_code = '''
#include <string>
#include <list>
#include "python_converters.hpp"

namespace sandbox { namespace {

    void list_string_converter(){
        resp::tuple_mapping<std::list<std::string>, resp::variable_capacity_policy>();
    }

    void init_module(){
        list_string_converter();
    }

}} // namespace sandbox::<anonymous>
'''
    obj.custom_registration_code = '''sandbox::init_module();'''
    obj.custom_code = """
mb.global_ns.class_('Section').exclude()
bfd = mb.global_ns.class_('BFDWrapper')
bfd.include()
bfd.member_functions('findFunction').exclude()
bfd.member_functions('getBFDDescriptor').exclude()
bfd.member_functions('getInstance').call_policies = call_policies.return_value_policy( call_policies.reference_existing_object )
"""
